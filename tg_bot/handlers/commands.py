from aiogram import Router
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import any_state, default_state
from aiogram.types import (
    Message,
)

from keyboard import (
    start_questions_markup,
)
from states.FSMForm import FSMFillForm

router = Router()


@router.message(Command(commands=["start"]), StateFilter(any_state))
async def process_start_command(
    message: Message,
    state: FSMContext,
) -> None:
    await state.clear()
    await message.answer(
        text="üëã–ü—Ä–∏–≤–µ—Ç, –∫–ª–∏–µ–Ω—Ç! –î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫—É—é —Ñ–æ—Ä–º—É –æ—Ö—Ä–∞–Ω—ã –≤—ã–±—Ä–∞—Ç—å –¥–ª—è "
        "–≤–∞—à–µ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏! –û—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤ –º—ã —Å–º–æ–∂–µ–º –≤–∞–º –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å, "
        "–∫–∞–∫—É—é –∏–∑ 3 —Ñ–æ—Ä–º –æ—Ö—Ä–∞–Ω—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, –ü–∞—Ç–µ–Ω—Ç–æ–≤–∞–Ω–∏–µ, –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏–ª–∏ "
        "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Ç–∞–π–Ω–∞ –≤–∞–º –±–æ–ª—å—à–µ –ø–æ–¥–æ–π–¥–µ—Ç. \n–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É.",
        reply_markup=start_questions_markup(),
    )
    await state.set_state(FSMFillForm.start)


@router.message(Command(commands=["help"]), StateFilter(any_state))
async def process_help_command(
    message: Message,
    state: FSMContext,
) -> None:
    await message.answer(
        text="–≠—Ç–æ –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤–∞–º –≤ –≤—ã–±–æ—Ä–µ —Ñ–æ—Ä–º—ã –æ—Ö—Ä–∞–Ω—ã –¥–ª—è –≤–∞—à–µ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏. "
        "–î–æ—Å—Ç—É–ø–Ω–æ —Ç—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ö—Ä–∞–Ω—ã: 1Ô∏è‚É£ –ü–∞—Ç–µ–Ω—Ç–æ–≤–∞–Ω–∏–µ, 2Ô∏è‚É£ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏ 3Ô∏è‚É£ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Ç–∞–π–Ω–∞.\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ '/start', —á—Ç–æ–±—ã –±–æ—Ç –ø–æ–º–æ–≥ –≤–∞–º –≤—ã–±—Ä–∞—Ç—å —Ñ–æ—Ä–º—É –æ—Ö—Ä–∞–Ω—ã "
        "–∏–ª–∏ —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ.",
    )
    await state.set_state(default_state)
